<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:UMPS1103.Converters"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls">


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    <conv:LevelToMarginConverter x:Key="LevelToMarginConverter"></conv:LevelToMarginConverter>
    <conv:ObjectStateConverter x:Key="ObjectStateConverter"></conv:ObjectStateConverter>
    <conv:LockMethodConverter x:Key="LockMethodConverter"></conv:LockMethodConverter>

    <DataTemplate x:Key="LockMethodCellTemplate">
        <Border ToolTip="{Binding TipLockMethod}">
            <Image Height="15" Stretch="Uniform" 
                   Source="{Binding LockMethod,Converter={StaticResource LockMethodConverter}}"></Image>
        </Border>
    </DataTemplate>

    <Style x:Key="SampleTreeItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="ToolTip" Value="{Binding FullName}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                            Style="{DynamicResource ExpandCollaspToggleStyle}"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                            Grid.Column="1"
                            Grid.Row="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <vcc:DragDropPanel Tag="{Binding}">
                                <DockPanel LastChildFill="True">
                                    <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" 
                                    VerticalAlignment="Center" Source="{Binding Icon}"></Image>
                                    <ContentPresenter x:Name="PART_Header" 
                                                      TextElement.FontWeight="Bold"
                                            ContentSource="Header"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </DockPanel>
                            </vcc:DragDropPanel>
                        </Border>
                        <Image Grid.Column="2" Grid.Row="0"
                               VerticalAlignment="Center"
                               Height="15" Stretch="Uniform" Source="Images/locked.png"
                               Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                        <ItemsPresenter x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected,Mode=TwoWay}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
    </Style>


    <DataTemplate x:Key="CheckCellTemplate">
        <Image Height="15" Stretch="Uniform"
               Source="Images/locked.png"
               Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
    </DataTemplate>


    <DataTemplate x:Key="NameColumnTemplate">
        <vcc:DragDropPanel Tag="{Binding}">
            <DockPanel>
                <ToggleButton x:Name="Expander" 
                      Style="{DynamicResource ExpandCollaspToggleStyle}" 
                      Margin="{Binding Level,Converter={StaticResource LevelToMarginConverter},
                             RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      IsChecked="{Binding Path=IsExpanded,
                                 RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      ClickMode="Press"/>
                <CheckBox x:Name="CbName" Margin="2,0,5,0" IsChecked="{Binding IsChecked}" 
                      VerticalAlignment="Center"
                      Visibility="{Binding Path=IsShowCheckBox,
                Converter={StaticResource BooleanToVisibilityConverter},
                RelativeSource={RelativeSource 
                AncestorType=vcc:GridTree}}">
                </CheckBox>
                <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" 
                   VerticalAlignment="Center"
                   Visibility="{Binding IsShowIcon, 
                Converter={StaticResource BooleanToVisibilityConverter}, 
                RelativeSource={RelativeSource AncestorType=vcc:GridTree}}" 
                Source="{Binding Icon}"></Image>
                <TextBlock Text="{Binding Name}" 
                       FontSize="12" FontWeight="Bold" 
                       VerticalAlignment="Center"/>
            </DockPanel>
        </vcc:DragDropPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems,
                               RelativeSource={RelativeSource 
                               AncestorType={x:Type vcc:GridTreeItem}}}" 
                     Value="False">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="FullNameCellTemplate">
        <TextBlock Text="{Binding FullName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="DescriptionCellTemplate">
        <TextBlock Text="{Binding Description}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="ObjectStateCellTemplate">
        <Border ToolTip="{Binding TipState}">
            <Image Height="12" Stretch="Uniform" 
                   Source="{Binding State,Converter={StaticResource ObjectStateConverter}}"></Image>
        </Border>
    </DataTemplate>

</ResourceDictionary>