<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:umpc="http://www.voicecyber.com/ump/controls"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>-->
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>

    <Style x:Key="OUMMainView" TargetType="{x:Type UserControl}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush11}"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>
    <!--<Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].X"
                                             From="500" To="0" AccelerationRatio="1" Duration="0:0:0.8"></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="0" To="1" Duration="0:0:0.8"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>-->
   

    <Style x:Key="MainPageBg" TargetType="{x:Type Border}">

    </Style>

    <Style x:Key="PageHead" TargetType="{x:Type umpc:UMPPageHead}">
        <Setter Property="AppName" Value="UMP Organization and User Management"></Setter>
        <Setter Property="Height" Value="80"></Setter>
    </Style>

    <Style x:Key="StatusBar" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush2}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="FontSize" Value="9"></Setter>
    </Style>

    <Style x:Key="MyWaiter" TargetType="{x:Type vcc:MetroWaiter}">
        <Setter Property="Width" Value="500"></Setter>
        <Setter Property="Height" Value="10"></Setter>
        <!--<Setter Property="ViewColor" Value="{DynamicResource SystemBrush8}"></Setter>-->
        <!--<Setter Property="ViewWidthHeight" Value="5"></Setter>-->
    </Style>

    <Style x:Key="BorderLeft" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderLeftBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush9}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>
    
    <Style x:Key="BorderMain" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderMainBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>

    <Style x:Key="GridSpliterLeft" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
    </Style>

    <Style x:Key="BorderBasicOpt" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,2,0,1"></Setter>
    </Style>

    <Style x:Key="BorderOtherPosition" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,1"></Setter>
    </Style>

    <Style x:Key="BorderDetail" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,1"></Setter>
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                   TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition ></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                      Grid.ColumnSpan="2"
                      CornerRadius="2"
                      BorderThickness="1"
                    Background="{DynamicResource SystemBrush8}"
                    BorderBrush="{DynamicResource SystemBrush8}">
            </Border>
            <Path x:Name="CollapsedArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <Path x:Name="ExpandededArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="M 0 4 L 4 0 L 8 4 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <ContentPresenter Grid.Column="1" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center"></ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush7}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush10}"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush8}"></Setter>
                <Setter TargetName="ExpandededArrow" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="CollapsedArrow" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpandStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ToggleButton OverridesDefaultStyle="True" Grid.ColumnSpan="2"
                                          Template="{StaticResource ExpanderToggleButton}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter
                                          Margin="5"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{DynamicResource SystemBrush1}"/>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Border x:Name="Content"
                                Visibility="Collapsed"
                                Grid.Row="1"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility"
                                    Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Padding" Value="10,2"></Setter>
        <Setter Property="Control.Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush8}"></Setter>
    </Style>

    <Style x:Key="GridTreeStyle" TargetType="{x:Type vcc:GridTree}">
        <Setter Property="IsShowIcon" Value="True"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Margin" Value="0,0,0,25"></Setter>
         <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:GridTree}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Name="ScrollViewer" Focusable="False"
                                      CanContentScroll="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <ScrollViewer Grid.Column="0" Grid.Row="0" 
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <GridViewHeaderRowPresenter
                                                Columns="{Binding Columns,RelativeSource={
                                                    RelativeSource FindAncestor,AncestorType={x:Type vcc:GridTree}}}" />
                                        </ScrollViewer>
                                        <ScrollContentPresenter Grid.Column="0" Grid.Row="1"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"></ScrollContentPresenter>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=VerticalOffset,Mode=OneWay}"></ScrollBar>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                                                   Orientation="Horizontal"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HorizontalOffset,Mode=OneWay}"></ScrollBar>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridTreeItemStyle" TargetType="{x:Type vcc:GridTreeItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
        <Setter Property="IsChecked" Value="{Binding IsChecked,Mode=TwoWay}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:GridTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{Binding Columns,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type vcc:GridTree}}}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush8}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  SystemBrush1}"/>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush9}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  SystemBrush1}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush8}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource SystemBrush1}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected}"></Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="GridTreeItemTemplate" DataType="{x:Type vcc:GridTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>
    
    <Style x:Key="SampleTreeStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Auto"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <HierarchicalDataTemplate x:Key="SampleTreeItemTemplate" DataType="{x:Type TreeViewItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>

    <Style x:Key="SampleTreeItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="ToolTip" Value="{Binding FullName}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                            Style="{DynamicResource ExpandCollaspToggleStyle}"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                            Grid.Column="1"
                            Grid.Row="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <vcc:DragDropPanel Tag="{Binding}">
                                <DockPanel LastChildFill="True">
                                    <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" 
                                    VerticalAlignment="Center" Source="{Binding Icon}"></Image>
                                    <ContentPresenter x:Name="PART_Header" 
                                                      TextElement.FontWeight="Bold"
                                            ContentSource="Header"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </DockPanel>
                            </vcc:DragDropPanel>
                        </Border>
                        <Image Grid.Column="2" Grid.Row="0"
                               VerticalAlignment="Center"
                               Height="15" Stretch="Uniform" Source="Images/locked.png"
                               Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                        <ItemsPresenter x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected,Mode=TwoWay}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
    </Style>
    
    <Style x:Key="DiagramTreeStyle" TargetType="{x:Type vcc:DiagramTree}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:DiagramTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="DiagramTreeItemTemplate" DataType="{x:Type vcc:DiagramTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>

    <Style x:Key="DiagramTreeItemstyle" TargetType="{x:Type vcc:DiagramTreeItem}">
        <Setter Property="Name" Value="{Binding Name}"></Setter>
        <Setter Property="Description" Value="{Binding FullName}"></Setter>
        <Setter Property="Icon" Value="{Binding Icon}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected,Mode=TwoWay}"></Setter>
        <Setter Property="ToolTip" Value="{Binding FullName}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:DiagramTreeItem}">
                    <Border Name="BorderPanel">
                        <Grid Margin="15">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <vcc:DiagramPanel Grid.Row="1" Orientation="Horizontal"
                                              IsItemsHost="True" x:Name="ItemsHost">
                            </vcc:DiagramPanel>
                            <vcc:DragDropPanel Grid.Row="0" HorizontalAlignment="Center" Tag="{Binding}">
                                <Border Name="BorderHeader">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" 
                                           FontWeight="Bold" Text="{Binding Name}"></TextBlock>
                                        <Grid Grid.Column="0" Grid.Row="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <ToggleButton Name="Expander" Grid.Row="0"
                                                  Style="{DynamicResource ExpandCollaspToggleStyle}"
                                                  ClickMode="Press"
                                                  IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"></ToggleButton>
                                            <Image VerticalAlignment="Center" Grid.Row="1"
                                                   Height="15" Stretch="Uniform" Source="Images/locked.png"
                                                   Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                                        </Grid>
                                        <Image Grid.Column="1" Grid.Row="1" 
                                               Width="64" Height="64" Stretch="Uniform"
                                               Source="{Binding Icon}">
                                        </Image>
                                    </Grid>
                                </Border>
                            </vcc:DragDropPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderHeader" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect></DropShadowBitmapEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="BorderHeader" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderHeader" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect></DropShadowBitmapEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush9}" Visibility="Collapsed"></Border>
                            <StackPanel Orientation="Horizontal" Margin="10,5">
                                <StackPanel Name="Panel"  Orientation="Horizontal">
                                    <Image Width="18" Stretch="Uniform" 
                                           Margin="2,0,0,0" 
                                           Source="{Binding Icon}"
                                           VerticalAlignment="Center"></Image>
                                    <TextBlock Margin="2,0" VerticalAlignment="Center"
                                            Text="{Binding Display}"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ToolButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="ToolTip" Value="{Binding Display}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush10}" Visibility="Collapsed"></Border>
                            <Image Height="24" Stretch="Uniform" 
                                Source="{Binding Icon}"
                                VerticalAlignment="Center"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CellOperationButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Margin" Value="2,1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush7}" Visibility="Hidden"></Border>
                            <Image Stretch="Uniform" Source="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CellOperationAddOrg" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/add.png"></Setter>
    </Style>

    <Style x:Key="CellOperationModifyOrg" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/modify.png"></Setter>
    </Style>

    <Style x:Key="CellOperationDeleteOrg" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/remove.png"></Setter>
    </Style>

    <Style x:Key="CellOperationAddUser" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/add.png"></Setter>
    </Style>

    <Style x:Key="CellOperationModifyUser" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/modify.png"></Setter>
    </Style>

    <Style x:Key="CellOperationDeleteUser" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/remove.png"></Setter>
    </Style>

    <Style x:Key="CellOperationSetRole" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/add.png"></Setter>
    </Style>

    <Style x:Key="CellOperationSetManagement" TargetType="{x:Type Button}" BasedOn="{StaticResource CellOperationButton}">
        <Setter Property="Tag" Value="Images/add.png"></Setter>
    </Style>

    <Style x:Key="PopupInfo" TargetType="{x:Type umpc:PopupPanel}">
        <Setter Property="Icon" Value="Images/ump.png"></Setter>
    </Style>

    <Style x:Key="TabControlView" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <TabPanel x:Name="HeaderPanel"
                                  VerticalAlignment="Bottom"
                                  HorizontalAlignment="Right"
                                  Panel.ZIndex="1"
                                  Margin="0,0,20,0"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border x:Name="Border"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="SelectionChanged">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1" Duration="0:0:0.5"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemView" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0"
                                BorderThickness="0"
                                CornerRadius="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="10,5"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BorderRoleTree" TargetType="{x:Type Border}">
        <Setter Property="MaxHeight" Value="350"></Setter>
        <Setter Property="MinHeight" Value="300"></Setter>
        <Setter Property="MinWidth" Value="400"></Setter>
    </Style>
    
    <Style x:Key="RoleTreeStyle" TargetType="{x:Type vcc:CheckableTree}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RoleTreeItemStyle" TargetType="{x:Type vcc:CheckableTreeItem}">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{DynamicResource ExpandCollaspToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type vcc:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <CheckBox IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                <ContentPresenter Content="{Binding Name}" Margin="2,0" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <HierarchicalDataTemplate x:Key="RoleTreeItemTemplate" DataType="{x:Type vcc:CheckableTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBox Text="{Binding Name}"></TextBox>
    </HierarchicalDataTemplate>

    <Style x:Key="BorderObjectTree" TargetType="{x:Type Border}">
        <Setter Property="MaxHeight" Value="350"></Setter>
        <Setter Property="MinHeight" Value="300"></Setter>
        <Setter Property="MinWidth" Value="400"></Setter>
    </Style>

    <Style x:Key="MmtObjectTreeStyle" TargetType="{x:Type vcc:CheckableTree}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MmtObjectTreeItemStyle" TargetType="{x:Type vcc:CheckableTreeItem}">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
        <Setter Property="ToolTip" Value="{Binding FullName}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{DynamicResource ExpandCollaspToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type vcc:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <CheckBox IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                <Image Height="16" Width="16" Stretch="Uniform" Source="{Binding Icon}"></Image>
                                <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="MmtObjectTreeItemTemplate" DataType="{x:Type vcc:CheckableTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBox Text="{Binding Name}"></TextBox>
    </HierarchicalDataTemplate>

</ResourceDictionary>
    