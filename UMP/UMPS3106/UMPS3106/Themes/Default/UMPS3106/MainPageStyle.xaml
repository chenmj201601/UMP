<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:umpc="http://www.voicecyber.com/ump/controls"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls"
                    xmlns:avalonDock="http://www.voicecyber.com/wpf/avalondock"
                    xmlns:models="clr-namespace:UMPS3106.Models"
                    xmlns:cmd="clr-namespace:UMPS3106.Commands"
                    xmlns:conv="clr-namespace:UMPS3106.LinkToLaosURL">

    <Style x:Key="TRMainPage" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush11}"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="PageHead" TargetType="{x:Type umpc:UMPPageHead}">
        <Setter Property="AppName" Value="Tutorial Repertory"></Setter>
        <Setter Property="Height" Value="80"></Setter>
    </Style>

    <Style x:Key="StatusBar" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush2}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <Style x:Key="MyWaiter" TargetType="{x:Type vcc:MetroWaiter}">
        <Setter Property="Width" Value="500"></Setter>
        <Setter Property="Height" Value="10"></Setter>
    </Style>

    <Style x:Key="GridSpliterLeft" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
    </Style>

    <Style x:Key="BorderPanelContent" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
    </Style>

    <Style x:Key="ListViewRecord" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels"
            Value="true" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter Property="VerticalContentAlignment"
            Value="Center" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Style="{DynamicResource
                                {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <models:BackgroundConverter x:Key="ListViewBackgroundConverter"></models:BackgroundConverter>

    <Style x:Key="ListViewItemRecord" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Converter="{StaticResource ListViewBackgroundConverter}"></Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                              Padding="3"
                              SnapsToDevicePixels="true"
                              Background="{TemplateBinding Background}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush9}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush8}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupInfo" TargetType="{x:Type umpc:PopupPanel}">
        <Setter Property="Icon" Value="Images/ump.png"></Setter>
    </Style>

    <Style x:Key="TreeViewObjects" TargetType="{x:Type vcc:CheckableTree}">
        <Setter Property="IsShowIcon" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Auto"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--去掉节点前面的checkBox-->
    <Style x:Key="TreeViewItemObject" TargetType="{x:Type vcc:CheckableTreeItem}">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <!--<Setter Property="IsChecked" Value="{Binding IsChecked}"></Setter>-->
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"></Setter>
        <Setter Property="ToolTip" Value="{Binding Description}"></Setter>
        <Setter Property="Icon" Value="{Binding Icon}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{DynamicResource ExpandCollaspToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type vcc:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <!--<CheckBox IsChecked="{Binding IsChecked}" Tag="{Binding }"  VerticalAlignment="Center" />-->
                                <Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding Icon,Mode=OneTime,IsAsync=True}"></Image>
                                <ContentPresenter ContentSource="Header"></ContentPresenter>
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>        
    </Style>

    <conv:LaosLinkConverter x:Key="LaosLinkConverters"/>

    <DataTemplate x:Key="CellLaosLinkTemplate">
        <Button Style="{DynamicResource CellOperationButton}" 
                   Visibility="{Binding FileType,Converter={StaticResource LaosLinkConverters},ConverterParameter=Link}"
                    Command="cmd:ContentMenuCommand.LaosLinkCommand" CommandParameter="{Binding}">
            <Image Stretch="Uniform" Source="Images/link.png" ></Image>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="CellBrowseTemplate">
        <Button Style="{DynamicResource CellOperationButton}" 
                   Visibility="{Binding FileType,Converter={StaticResource LaosLinkConverters},ConverterParameter=Browse}"
                    Command="cmd:ContentMenuCommand.BrowseHistoryCommand" CommandParameter="{Binding}">
            <Image Stretch="Uniform" Source="Images/history.png" ></Image>
        </Button>
    </DataTemplate>
    
    <Style x:Key="CellOperationButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"></Setter>
        <Setter Property="Height" Value="15"></Setter>
        <Setter Property="Margin" Value="2,1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush7}" Visibility="Hidden"></Border>
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    

</ResourceDictionary>