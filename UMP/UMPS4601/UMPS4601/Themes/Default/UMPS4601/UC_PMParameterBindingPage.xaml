<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:umpc="http://www.voicecyber.com/ump/controls"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls"
                    xmlns:conv="clr-namespace:UMPS4601.Converters">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    <conv:StateTypeToImageConverter x:Key="StateTypeToImageConverter"></conv:StateTypeToImageConverter>
    <conv:BackgroundConverter x:Key="ListViewBackgroundConverter"></conv:BackgroundConverter>
    
    <Style x:Key="BorderLeft" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderLeftBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush9}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>


    <Style x:Key="BorderBasicOpt" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,2,0,1"></Setter>
    </Style>

    <Style x:Key="BorderOtherPosition" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,1"></Setter>
    </Style>

    <Style x:Key="GridSpliterLeft" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
    </Style>

    <Style x:Key="ToolBarStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush8}"></Setter>
    </Style>

    <Style x:Key="LbTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SystemBrush2}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="5,0"></Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                   TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition ></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                      Grid.ColumnSpan="2"
                      CornerRadius="2"
                      BorderThickness="1"
                    Background="{DynamicResource SystemBrush8}"
                    BorderBrush="{DynamicResource SystemBrush8}">
            </Border>
            <Path x:Name="CollapsedArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <Path x:Name="ExpandededArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="M 0 4 L 4 0 L 8 4 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <ContentPresenter Grid.Column="1" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center"></ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush7}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush10}"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush8}"></Setter>
                <Setter TargetName="ExpandededArrow" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="CollapsedArrow" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="ExpandStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ToggleButton OverridesDefaultStyle="True" Grid.ColumnSpan="2"
                                          Template="{StaticResource ExpanderToggleButton}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter
                                          Margin="5"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{DynamicResource SystemBrush1}"/>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Border x:Name="Content"
                                Visibility="Collapsed"
                                Grid.Row="1"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility"
                                    Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SampleTreeStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Auto"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="SampleTreeItemTemplate" DataType="{x:Type TreeViewItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>

    <Style x:Key="SampleTreeItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment,
      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="ToolTip" Value="{Binding FullName}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                            Style="{DynamicResource ExpandCollaspToggleStyle}"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                            Grid.Column="1"
                            Grid.Row="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <vcc:DragDropPanel Tag="{Binding}">
                                <DockPanel LastChildFill="True">
                                    <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" 
                                    VerticalAlignment="Center" Source="{Binding Icon}"></Image>
                                    <ContentPresenter x:Name="PART_Header" 
                                                      TextElement.FontWeight="Bold"
                                            ContentSource="Header"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </DockPanel>
                            </vcc:DragDropPanel>
                        </Border>
                        <Image Grid.Column="2" Grid.Row="0"
                               VerticalAlignment="Center"
                               Height="15" Stretch="Uniform"
                               Visibility="{Binding IsSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                        <ItemsPresenter x:Name="ItemsHost"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="3"
                                Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected,Mode=TwoWay}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
    </Style>

    <Style x:Key="BorderMain" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderMainBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>

    <Style x:Key="OptButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Disable" Background="{DynamicResource SystemBrush2}" Visibility="Collapsed"></Border>
                            <Border Name="Over" Background="{DynamicResource SystemBrush9}" Visibility="Collapsed"></Border>
                            <StackPanel Orientation="Horizontal" Margin="10,5">
                                <StackPanel Name="Panel"  Orientation="Horizontal">
                                    <Image Width="18" Stretch="Uniform" 
                                           Margin="2,0,0,0" 
                                           Source="{Binding Icon}"
                                           VerticalAlignment="Center"></Image>
                                    <TextBlock Margin="2,0" VerticalAlignment="Center"
                                            Text="{Binding Display}"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Disable" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewRecordScoreDetail" TargetType="{x:Type ListViewItem}">        
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <!--<Setter Property="Foreground" Value="{Binding Foreground}"></Setter>-->
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Converter={StaticResource ListViewBackgroundConverter}}"></Setter>
        <!--<Setter Property="ToolTip" Value="{Binding Error}"></Setter>-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                              Padding="3"
                              SnapsToDevicePixels="true"
                              Background="{TemplateBinding Background}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush8}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

     
    <Style x:Key="ListViewRecords" TargetType="{x:Type ListView}">
        
        <Setter Property="MinWidth" Value="300"></Setter>
        <Setter Property="MinHeight" Value="120"></Setter>
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self},Converter={StaticResource ListViewBackgroundConverter}}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Style="{DynamicResource
                                {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupInfo" TargetType="{x:Type umpc:PopupPanel}">
        <Setter Property="Icon" Value="Images/ump.png"></Setter>
    </Style>
    
    <DataTemplate x:Key="CellStateTypeTemplate" DataType="{x:Type Control}">
        <Border>
            <Grid HorizontalAlignment="Left">
                <Image Style="{DynamicResource Forbidden}" 
                       Visibility="{Binding Active,Converter={StaticResource StateTypeToImageConverter},ConverterParameter=F}"></Image>
                <Image Style="{DynamicResource Start}" 
                       Visibility="{Binding Active,Converter={StaticResource StateTypeToImageConverter},ConverterParameter=S}"></Image>
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="TabControlCondition" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Panel.ZIndex="1"
                                  Margin="0,0,4,-1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border x:Name="Border"
                                    Grid.Row="1"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                Margin="4"
                                ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>