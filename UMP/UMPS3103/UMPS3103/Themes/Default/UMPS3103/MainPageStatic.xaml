<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls"
                    xmlns:conv="clr-namespace:UMPS3103.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    <!--<conv:ImageSourceConverter x:Key="ImageSourceConverter"></conv:ImageSourceConverter>
    <conv:EnabledStatusConverter x:Key="EnabledStatusConverter"></conv:EnabledStatusConverter>
    <conv:IsDeleteStatusConvert x:Key="IsDeleteStatusConvert"></conv:IsDeleteStatusConvert>
    <conv:OrgTypeConverter x:Key="OrgTypeConverter"></conv:OrgTypeConverter>
    <conv:ObjectStateConverter x:Key="ObjectStateConverter"></conv:ObjectStateConverter>
    <conv:LevelToMarginConverter x:Key="LevelToMarginConverter"></conv:LevelToMarginConverter>
    <conv:PermissionIsCheckConvert x:Key="PermissionIsCheckConverter"></conv:PermissionIsCheckConvert>
    <conv:PermissionIsEnable x:Key="PermissionIsEnableConverter"></conv:PermissionIsEnable>-->
    <!--<conv:PermissionIsEnable x:Key="PermissionIsEnableConverter"></conv:PermissionIsEnable>-->
    <!--<conv:CellOperationVisibilityConverter x:Key="CellOperationVisibilityConverter"></conv:CellOperationVisibilityConverter>-->
    <!--<conv:LockMethodConverter x:Key="LockMethodConverter"></conv:LockMethodConverter>-->

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19" Height="13" Background="Transparent">
                        <Border Width="9"
                                  Height="9"
                                  BorderThickness="1"
                                  BorderBrush="#FF7898B5"
                                  CornerRadius="1"
                                  SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White" Offset=".2"/>
                                        <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath"
                                  Margin="1,1,1,1"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                                        L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FullNameCellTemplate">
        <TextBlock Text="{Binding FullName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="RoleNameCellTemplate">
        <TextBlock Text="{Binding RoleName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="CheckRecord">
        <CheckBox Tag="{Binding  RowID}" IsChecked="{Binding  Path=IsCheck, Mode=TwoWay}" VerticalAlignment="Center"></CheckBox>
    </DataTemplate>


    <DataTemplate x:Key="TaskID">
        <TextBlock Text="{Binding TaskID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskName">
        <TextBlock Text="{Binding TaskName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskDesc">
        <TextBlock Text="{Binding TaskDesc}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskType">
        <TextBlock Text="{Binding TaskType}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskTypeName">
        <TextBlock Text="{Binding TaskTypeName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="IsShare">
        <TextBlock Text="{Binding IsShare}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AssignTime">
        <TextBlock Text="{Binding AssignTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AssignUser">
        <TextBlock Text="{Binding AssignUser}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AssignNum">
        <TextBlock Text="{Binding AssignNum}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="DealLine">
        <TextBlock Text="{Binding DealLine}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AlreadyScoreNum">
        <TextBlock Text="{Binding AlreadyScoreNum}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="ModifyTime">
        <TextBlock Text="{Binding ModifyTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="ModifyUserFName">
        <TextBlock Text="{Binding ModifyUserFName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="RemindDayTime">
        <TextBlock Text="{Binding RemindDayTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="ReminderIDs">
        <TextBlock Text="{Binding ReminderIDs}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="BelongYear">
        <TextBlock Text="{Binding BelongYear}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="BelongMonth">
        <TextBlock Text="{Binding BelongMonth}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="IsFinish">
        <TextBlock Text="{Binding IsFinish}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="FinishTime">
        <TextBlock Text="{Binding FinishTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AssignUserFName">
        <TextBlock Text="{Binding AssignUserFName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskAllRecordLength">
        <TextBlock Text="{Binding TaskAllRecordLength}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="strTaskAllRecordLength">
        <TextBlock Text="{Binding strTaskAllRecordLength}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskFinishRecordLength">
        <TextBlock Text="{Binding TaskFinishRecordLength}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    

    <DataTemplate x:Key="RecoredReference">
        <TextBlock Text="{Binding RecoredReference}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="UserFullName">
        <TextBlock Text="{Binding UserFullName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="IsLock">
        <TextBlock Text="{Binding IsLock}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="LockTime">
        <TextBlock Text="{Binding LockTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AllotType">
        <TextBlock Text="{Binding AllotType}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="AllotTypeName">
        <TextBlock Text="{Binding AllotTypeName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="FromTaskID">
        <TextBlock Text="{Binding FromTaskID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="FromTaskName">
        <TextBlock Text="{Binding FromTaskName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="RowID">
        <TextBlock Text="{Binding RowID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="RecordReference">
        <TextBlock Text="{Binding RecordReference}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="StartRecordTime">
        <TextBlock Text="{Binding StartRecordTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="StopRecordTime">
        <TextBlock Text="{Binding StopRecordTime}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="IsScore">
        <TextBlock Text="{Binding IsScore}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="VoiceID">
        <TextBlock Text="{Binding VoiceID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="ChannelID">
        <TextBlock Text="{Binding ChannelID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="VoiceIP">
        <TextBlock Text="{Binding VoiceIP}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="Extension">
        <TextBlock Text="{Binding Extension}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="Agent">
        <TextBlock Text="{Binding Agent}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="Duration">
        <TextBlock Text="{Binding Duration}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="StrDuration">
        <TextBlock Text="{Binding StrDuration}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="Direction">
        <TextBlock Text="{Binding Direction}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="CallerID">
        <TextBlock Text="{Binding CallerID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="CalledID">
        <TextBlock Text="{Binding CalledID}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="DirShow">
        <TextBlock Text="{Binding DirShow}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>


    <!--<DataTemplate x:Key="NameColumnTemplate">
        <DockPanel>
            <ToggleButton x:Name="Expander" 
                      Style="{StaticResource ExpandCollapseToggleStyle}" 
                      Margin="{Binding Level,Converter={StaticResource LevelToMarginConverter},
                             RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      IsChecked="{Binding Path=IsExpanded,
                                 RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      ClickMode="Press"/>
            <CheckBox x:Name="CbName" Margin="2,0,5,0" IsChecked="{Binding IsChecked}"  
                      Visibility="{Binding Path=IsShowCheckBox,
                Converter={StaticResource BooleanToVisibilityConverter},
                RelativeSource={RelativeSource 
                AncestorType=vcc:GridTree}}">
            </CheckBox>
            <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" Visibility="{Binding IsShowIcon, 
                Converter={StaticResource BooleanToVisibilityConverter}, 
                RelativeSource={RelativeSource AncestorType=vcc:GridTree}}" 
                Source="{Binding Icon}"></Image>
            <TextBlock Text="{Binding Name}" FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems,
                               RelativeSource={RelativeSource 
                               AncestorType={x:Type vcc:GridTreeItem}}}" 
                     Value="False">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="OrgTypeCellTemplate">
        <Border>
            <Image Height="15" Stretch="Uniform" 
                   Source="{Binding OrgType,Converter={StaticResource OrgTypeConverter}}"></Image>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="ObjectStateCellTemplate">
        <Border ToolTip="{Binding State}">
            <Image Height="12" Stretch="Uniform" 
                   Source="{Binding State,Converter={StaticResource ObjectStateConverter}}"></Image>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="PermissionIsCanUse">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox    IsChecked="{Binding IsCanUse, Mode=TwoWay, Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="PermisionIsCanDownAssign">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox IsChecked="{Binding IsCanDownAssign,Mode=TwoWay,  Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="PermissionIsCanCascadeRecycle">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox IsChecked="{Binding IsCanCascadeRecycle, Mode=TwoWay, Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="LockMethodCellTemplate">
        <Border ToolTip="{Binding LockMethod}">
            <Image Height="15" Stretch="Uniform" 
                   Source="{Binding LockMethod,Converter={StaticResource LockMethodConverter}}"></Image>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="EnableCellTemplate">
        <Border VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Center" Text="{Binding IsActive, Converter={StaticResource EnabledStatusConverter}}"/>
        </Border>
    </DataTemplate>-->

    <!--<DataTemplate x:Key="IsDeleteStatusConvertTemplate">
        <Border VerticalAlignment="Center" >
            <TextBlock HorizontalAlignment="Center" Text="{Binding IsDelete, Converter={StaticResource IsDeleteStatusConvert}}"/>
        </Border>
    </DataTemplate>-->

    <Style x:Key="CellOperationButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Margin" Value="2,1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush7}" Visibility="Hidden"></Border>
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<DataTemplate x:Key="OperationCellTemplate">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" >

            <Button Style="{StaticResource CellOperationButton}"
                    Command="cmd:URMainPageCommands.ModifyRoleCommand" 
                    CommandParameter="{Binding}">
                <Image Stretch="Uniform" Source="Images/modify.png"></Image>
            </Button>

            <Button Style="{StaticResource CellOperationButton}"
                    Command="cmd:URMainPageCommands.DeleteRoleCommand" 
                    CommandParameter="{Binding}">
                <Image Stretch="Uniform" Source="Images/remove.png"></Image>
            </Button>
        </StackPanel>
    </DataTemplate>-->

    <conv:MediaTypeToImageConverter x:Key="MediaTypeToImageConverter"></conv:MediaTypeToImageConverter>
    <conv:EncryptFlagToIconConverter x:Key="EncryptFlagToIconConverter"></conv:EncryptFlagToIconConverter>

    <DataTemplate x:Key="CellMediaTypeTemplate" DataType="{x:Type Control}">
        <Border>
            <Grid HorizontalAlignment="Left">
                <Image Style="{DynamicResource ImageMediaTypeVoice}"
                       Visibility="{Binding MediaType,Converter={StaticResource MediaTypeToImageConverter},ConverterParameter=V}"></Image>
                <Image Style="{DynamicResource ImageMediaTypeScreen}"
                       Visibility="{Binding MediaType,Converter={StaticResource MediaTypeToImageConverter},ConverterParameter=S}"></Image>
                <Image Style="{DynamicResource ImageMediaTypeVoiceScreen}"
                       Visibility="{Binding MediaType,Converter={StaticResource MediaTypeToImageConverter},ConverterParameter=A}"></Image>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CellRowNumberTemplate" DataType="{x:Type Control}">
        <Border>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding RowID}" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                <Grid HorizontalAlignment="Left" Margin="2,0">
                    <Image Style="{DynamicResource ImageEncryptFlag2}"
                       Visibility="{Binding EncryptFlag,Converter={StaticResource EncryptFlagToIconConverter}}"></Image>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>

</ResourceDictionary>