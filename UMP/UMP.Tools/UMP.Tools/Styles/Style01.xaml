<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:MicExpressDraw="http://schemas.microsoft.com/expression/2010/drawing">
    <Style x:Key="NormalFontStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
    </Style>

    <Style x:Key="MenuItemFontStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="LabelNormalStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="TextOptions.TextHintingMode" Value="Fixed"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxNormalStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AutoWordSelection" Value="True"/>
    </Style>

    <Style x:Key="CheckBoxNormalStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
    </Style>

    <Style x:Key="ComboBoxNormalStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="ComboBoxItemNormalStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="2,2,0,2"/>
    </Style>

    <Style x:Key="TextBlockNormalStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    <Style x:Key="TreeViewYoungNormalStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RadioButtonNormalStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource NormalFontStyle}">
        
    </Style>
    
    <Style x:Key="BorderApplicationHeaderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Key="ImageApplicationLogoStyle" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="12,8,0,0"/>
        <!--<Setter Property="Stretch" Value="Fill"/>-->
    </Style>

    <Style x:Key="LabelApplicationTitleStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <!--<Setter Property="HorizontalAlignment" Value="Left"/>-->
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Margin" Value="60,3,5,0"/>
        <Setter Property="Content" Value="Unified Management Portal Tools"/>
    </Style>

    <Style x:Key="ButtonCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0,0,0,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <TextBlock TextAlignment="Center" TextWrapping="Wrap" Text="X" Width="40" Foreground="#C0FFFFFF" Margin="0.652,4,0.652,1" FontSize="14" HorizontalAlignment="Stretch" FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF490202" Offset="0"/>
                                        <GradientStop Color="#00FF0000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="#00FF0000" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMaximizedStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Rectangle x:Name="rectangle" Fill="{x:Null}" Stroke="#B3FFFFFF" Margin="11.125,8.125,11,6.25" StrokeThickness="2"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5AFFFFFF" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5A666666" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonRestoreStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <!--<Rectangle x:Name="rectangle" Fill="{x:Null}" Stroke="#B3FFFFFF" Margin="11.125,8.125,11,6.25" StrokeThickness="2"/>-->
                            <Canvas Margin="10,5,0,0">
                                <Rectangle Fill="{x:Null}" Stroke="#B3FFFFFF" Width="10" Height="10" Canvas.Left="2" Canvas.Top="5" StrokeThickness="2"></Rectangle>
                                <Line Stroke="#B3FFFFFF" X1="4" Y1="0" X2="12" Y2="0"  Canvas.Left="2" Canvas.Top="3" StrokeThickness="2"></Line>
                                <Line Stroke="#B3FFFFFF" X1="12" Y1="0" X2="12" Y2="8" Canvas.Left="2" Canvas.Top="3" StrokeThickness="2"></Line>
                            </Canvas>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5AFFFFFF" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5A666666" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMinimizedStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Rectangle x:Name="rectangle" Fill="{x:Null}" Stroke="#B3FFFFFF" Margin="12,0,12,6.375" StrokeThickness="2" Height="3" VerticalAlignment="Bottom"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5AFFFFFF" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5A666666" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonApplicationMenuStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Rectangle x:Name="rectangle" Fill="{x:Null}" Stroke="#B3FFFFFF" Margin="13.99,6.578,15.302,0" StrokeThickness="2" Height="2.5" VerticalAlignment="Top"/>
                        </Border>
                        <MicExpressDraw:RegularPolygon Fill="#B3FFFFFF" InnerRadius="1" Margin="15.323,11.658,15.26,4.592" PointCount="3" Stretch="Fill" StrokeThickness="2" RenderTransformOrigin="0.5,0.5">
                            <MicExpressDraw:RegularPolygon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </MicExpressDraw:RegularPolygon.RenderTransform>
                        </MicExpressDraw:RegularPolygon>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5AFFFFFF" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5A666666" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonTaskTipStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderThickness="1,0,0,0" CornerRadius="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF0B4072" Offset="0"/>
                                    <GradientStop Offset="1" Color="#005A5A5A"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Margin="0">
                                <Label Margin="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource LabelNormalStyle}" Content="{Binding}" FontSize="14" HorizontalAlignment="Stretch" FontWeight="ExtraBold" Foreground="Red"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5AFFFFFF" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#5A666666" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BorderApplicationWorkAreaStyle" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="WhiteSmoke" Opacity="0.65"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="3,0,3,3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="GridApplicationWorkAreaStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="BorderFeatureStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Key="GridFeatureStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="BorderDetailStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Key="GridDetailStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="BorderOperationsStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style x:Key="GridOperationsStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <Style x:Key="BorderStatusBarStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="LightGray" Opacity="0.4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridStatusBarStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="SplitterLeftRightStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="ShowsPreview" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="2"/>
    </Style>

    <Style x:Key="ImageStatusStyle" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="LabelStatusLeftStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelNormalStyle}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="LabelStatusRightStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelNormalStyle}">
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="DockPanelFeatureTitleStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.45">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="WhiteSmoke" Offset="0.2" />
                        <GradientStop Color="LightGray" Offset="0.8"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageFeatureObjectStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="StretchDirection" Value="Both"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="LabelFeatureInformationStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="ImageCloseFeatureObjectStyle" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Tag" Value="FHDB"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="DockPanelObjectOperationsLStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.35">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="WhiteSmoke" Offset="0.2" />
                        <GradientStop Color="LightGray" Offset="0.8"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonConnectToServerStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="1,4,0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Tag" Value="FLTS"/>
    </Style>

    <Style x:Key="ButtonDisconnectToServerStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="1,4,0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Tag" Value="FDTS"/>
    </Style>

    <Style x:Key="ButtonServerPropertiesStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="1,4,0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Tag" Value="FVSI"/>
    </Style>

    <Style x:Key="ButtonRefreshInformationStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="1,4,0,2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Tag" Value="FRSI"/>
    </Style>

    <Style x:Key="DockPanelDetailTitleStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.45">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="WhiteSmoke" Offset="0.2" />
                        <GradientStop Color="LightGray" Offset="0.8"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageFeatureDetailTipStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="StretchDirection" Value="Both"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="LabelCurrentObjectPathStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelNormalStyle}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="GridTabControlFeatureDetailStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity" Value="1"/>
    </Style>

    <Style x:Key="GridSingleOperationStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="1" Color="WhiteSmoke" BlurRadius="20"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageSingleOperationStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
    </Style>

    <Style x:Key="TextBlockSingleOperationStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockNormalStyle}">
        <Setter Property="Margin" Value="30,0,28,0"/>
        <Setter Property="Padding" Value="0,4,0,0"/>
    </Style>

    <Style x:Key="ImageMoreOperationStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>

    <Style x:Key="DockPanelOperationsTitleStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.45">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="WhiteSmoke" Offset="0.2" />
                        <GradientStop Color="LightGray" Offset="0.8"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageOperationsStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="StretchDirection" Value="Both"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style x:Key="LabelOperationsTitleStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <Style x:Key="ImageCloseOperationsStyle" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Tag" Value="FHDB"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Tag" Value="FHDO"/>
    </Style>

    <Style x:Key="ScrollViewerObjectOperationsStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="GridGroupOperationsStyle" TargetType="{x:Type Grid}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="GridGroupOperationsNameStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.45">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Color="WhiteSmoke" Offset="0.2" />
                        <GradientStop Color="LightGray" Offset="0.8"/>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBlockGroupOperationsNameStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockNormalStyle}">
        <Setter Property="Margin" Value="0,1,26,1"/>
        <Setter Property="Padding" Value="5,5,0,0"/>
    </Style>

    <Style x:Key="ImageUpDownArrowStyle" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="0,1,2,1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>

    <Style x:Key="GridGroupOperationListStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="LabelForSpliterStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="10,2,5,2"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Background" Value="LightGray"/>
    </Style>

    <Style x:Key="ImageInChildWinodwHeader" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="4,6,0,0"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>

    <Style x:Key="LabelInChildWinodwHeader" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelNormalStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="32,0,0,0"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="BorderInChildeWindowDetail" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.85"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonLayoutStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NormalFontStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <!--等待操作完成窗口用的Style-->
    <Style x:Key="WindowBorderA" TargetType="Border">
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderBrush" Value="LightBlue"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <!--<Setter Property="Opacity" Value="0.6"/>-->
    </Style>
    
    <ControlTemplate x:Key="WindowATemplate" TargetType="{x:Type Window}">
        <Grid>
            <Border x:Name="WindowABorder" Style="{StaticResource WindowBorderA}">
                <Border.Background>
                    <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="LightSkyBlue"/>
                    </LinearGradientBrush>-->
                        <SolidColorBrush Color="LightYellow" Opacity="0.8"/>
                </Border.Background>
                <!--这一句很重要，主要用于放置界面元素，和asp.net中的masterpage有点像-->
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="WindowAStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="WindowState" Value="Normal"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Template" Value="{StaticResource WindowATemplate}"/>
        <Setter Property="Height" Value="34"/>
        <Setter Property="Width" Value="500"/>
    </Style>

    <Style x:Key="ImageInWaitForApplication" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="5,2,0,0"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>

    <Style x:Key="LabelInWaitForApplication" TargetType="{x:Type Label}" BasedOn="{StaticResource LabelNormalStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="40,1,5,0"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="DarkGreen"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
</ResourceDictionary>