<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls"
                    xmlns:conv="clr-namespace:UMPS1102.Converters"
                    xmlns:cmd="clr-namespace:UMPS1102.Commands">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    <conv:ImageSourceConverter x:Key="ImageSourceConverter"></conv:ImageSourceConverter>
    <conv:EnabledStatusConverter x:Key="EnabledStatusConverter"></conv:EnabledStatusConverter>
    <conv:IsDeleteStatusConvert x:Key="IsDeleteStatusConvert"></conv:IsDeleteStatusConvert>
    <conv:OrgTypeConverter x:Key="OrgTypeConverter"></conv:OrgTypeConverter>
    <conv:ObjectStateConverter x:Key="ObjectStateConverter"></conv:ObjectStateConverter>
    <conv:LevelToMarginConverter x:Key="LevelToMarginConverter"></conv:LevelToMarginConverter>
    <conv:PermissionIsCheckConvert x:Key="PermissionIsCheckConverter"></conv:PermissionIsCheckConvert>
    <conv:PermissionIsEnable x:Key="PermissionIsEnableConverter"></conv:PermissionIsEnable>
    <!--<conv:PermissionIsEnable x:Key="PermissionIsEnableConverter"></conv:PermissionIsEnable>-->
    <!--<conv:CellOperationVisibilityConverter x:Key="CellOperationVisibilityConverter"></conv:CellOperationVisibilityConverter>-->
    <!--<conv:LockMethodConverter x:Key="LockMethodConverter"></conv:LockMethodConverter>-->

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19" Height="13" Background="Transparent">
                        <Border Width="9"
                                  Height="9"
                                  BorderThickness="1"
                                  BorderBrush="#FF7898B5"
                                  CornerRadius="1"
                                  SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White" Offset=".2"/>
                                        <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath"
                                  Margin="1,1,1,1"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                                        L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FullNameCellTemplate">
        <TextBlock Text="{Binding FullName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="RoleNameCellTemplate">
        <TextBlock Text="{Binding RoleName}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>
    
    <DataTemplate x:Key="IsActiveCellTemplate">
        <TextBlock Text="{Binding StrIsActive}" VerticalAlignment="Center"></TextBlock>
    </DataTemplate>



    <DataTemplate x:Key="NameColumnTemplate">
        <DockPanel>
            <ToggleButton x:Name="Expander" 
                      Style="{StaticResource ExpandCollapseToggleStyle}" 
                      Margin="{Binding Level,Converter={StaticResource LevelToMarginConverter},
                             RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      IsChecked="{Binding Path=IsExpanded,
                                 RelativeSource={RelativeSource AncestorType={x:Type vcc:GridTreeItem}}}"
                      ClickMode="Press"/>
            <CheckBox x:Name="CbName" Margin="2,0,5,0" IsChecked="{Binding IsChecked}"  
                      Visibility="{Binding Path=IsShowCheckBox,
                Converter={StaticResource BooleanToVisibilityConverter},
                RelativeSource={RelativeSource 
                AncestorType=vcc:GridTree}}">
            </CheckBox>
            <Image x:Name="Icon" Stretch="Uniform" Height="18" Margin="2" Visibility="{Binding IsShowIcon, 
                Converter={StaticResource BooleanToVisibilityConverter}, 
                RelativeSource={RelativeSource AncestorType=vcc:GridTree}}" 
                Source="{Binding Icon}"></Image>
            <TextBlock Text="{Binding Name}" FontSize="12" FontWeight="Bold" VerticalAlignment="Center"/>
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems,
                               RelativeSource={RelativeSource 
                               AncestorType={x:Type vcc:GridTreeItem}}}" 
                     Value="False">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>   

    <DataTemplate x:Key="OrgTypeCellTemplate">
        <Border>
            <Image Height="15" Stretch="Uniform" 
                   Source="{Binding OrgType,Converter={StaticResource OrgTypeConverter}}"></Image>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ObjectStateCellTemplate">
        <Border ToolTip="{Binding State}">
            <Image Height="12" Stretch="Uniform" 
                   Source="{Binding State,Converter={StaticResource ObjectStateConverter}}"></Image>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="PermissionIsCanUse">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox    IsChecked="{Binding IsCanUse, Mode=TwoWay, Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="PermisionIsCanDownAssign">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox IsChecked="{Binding IsCanDownAssign,Mode=TwoWay,  Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="PermissionIsCanCascadeRecycle">
        <Border HorizontalAlignment="Left" VerticalAlignment="Center">
            <CheckBox IsChecked="{Binding IsCanCascadeRecycle, Mode=TwoWay, Converter={StaticResource PermissionIsCheckConverter }}"></CheckBox>
        </Border>
    </DataTemplate>
    
    <!--<DataTemplate x:Key="LockMethodCellTemplate">
        <Border ToolTip="{Binding LockMethod}">
            <Image Height="15" Stretch="Uniform" 
                   Source="{Binding LockMethod,Converter={StaticResource LockMethodConverter}}"></Image>
        </Border>
    </DataTemplate>-->
    
    <DataTemplate x:Key="EnableCellTemplate">
        <Border VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Center" Text="{Binding IsActive, Converter={StaticResource EnabledStatusConverter}}"/>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="IsDeleteStatusConvertTemplate">
        <Border VerticalAlignment="Center" >
            <TextBlock HorizontalAlignment="Center" Text="{Binding IsDelete, Converter={StaticResource IsDeleteStatusConvert}}"/>
        </Border>
    </DataTemplate>

    <Style x:Key="CellOperationButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Height" Value="23"></Setter>
        <Setter Property="Margin" Value="2,1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush7}" Visibility="Hidden"></Border>
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OperationCellTemplate">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" >
            <Button Style="{StaticResource CellOperationButton}"
                    Command="cmd:URMainPageCommands.ModifyRoleCommand" 
                    CommandParameter="{Binding}"
                    ToolTip="{Binding TipModifyRole}" >
                <Image Stretch="Uniform" Source="Images/modify.png"></Image>
            </Button>            
            <Button Style="{StaticResource CellOperationButton}"
                    Command="cmd:URMainPageCommands.DeleteRoleCommand" 
                    CommandParameter="{Binding}"
                    ToolTip="{Binding TipRemoveRole}">
                <Image Stretch="Uniform" Source="Images/remove.png"></Image>
            </Button>
        </StackPanel>
    </DataTemplate>

</ResourceDictionary>