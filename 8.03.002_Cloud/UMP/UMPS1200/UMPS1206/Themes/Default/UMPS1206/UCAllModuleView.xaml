<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BorderChartViewStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="SplitterDetailStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Width" Value="3"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>

    <Style x:Key="BorderDetailHeadStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5,2,2,5"></Setter>
        <Setter Property="Padding" Value="15,2"></Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Offset="0" Color="{DynamicResource SystemColor7}"></GradientStop>
                    <GradientStop Offset="0.3" Color="{DynamicResource SystemColor7}"></GradientStop>
                    <GradientStop Offset="1" Color="Transparent"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TxtDetailHeadStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
    </Style>

    <Style x:Key="BorderDetailContentStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="TxtDetailStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5,2"></Setter>
    </Style>

    <Style x:Key="ScrollViewerDiagramStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <!--<Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>-->
                        
                        <ScrollContentPresenter></ScrollContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupExpanderToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                              Grid.ColumnSpan="2"
                                Background="LightGray">
                        </Border>
                        <Path x:Name="CollapsedArrow" Grid.Column="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="{DynamicResource SystemBrush7}">
                        </Path>
                        <Path x:Name="ExpandededArrow" Grid.Column="0"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Visibility="Collapsed"
                              Data="M 0 4 L 4 0 L 8 4 Z"
                              Fill="{DynamicResource SystemBrush7}">
                        </Path>
                        <ContentPresenter Grid.Column="1" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CollapsedArrow" Property="Fill" Value="{DynamicResource SystemBrush1}"></Setter>
                            <Setter TargetName="ExpandededArrow" Property="Fill" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandededArrow" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="CollapsedArrow" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ExpandededArrow" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="CollapsedArrow" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush2}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Height="25"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ToggleButton OverridesDefaultStyle="True"
                                          Style="{DynamicResource GroupExpanderToggleStyle}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter
                                         Margin="5,2"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True" />
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Border x:Name="Content"
                                Grid.Row="1"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <!--<Border Background="LightGray" Opacity="0.8"></Border>-->
                                <ContentPresenter Grid.Column="1" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow"
                                  Property="Height"
                                  Value="{Binding DesiredHeight, ElementName=Content}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListBoxModuleItemStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"></Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ItemsPresenter></ItemsPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListBoxItemModuleItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
   <Style x:Key="BtnAppItemStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="Border"
                        CornerRadius="2"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        Cursor="Hand">
                        <ContentPresenter Margin="2"
                              RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageAppIconStyle" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Width" Value="80"></Setter>
    </Style>
    
    <Style x:Key="TxtAppTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="11"></Setter>
        <Setter Property="FontFamily" Value="Microsoft Yahei"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="Margin" Value="2,3"></Setter>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
    </Style>
    

</ResourceDictionary>