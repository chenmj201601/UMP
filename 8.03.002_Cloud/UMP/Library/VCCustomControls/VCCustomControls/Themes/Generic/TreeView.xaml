<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VoiceCyber.Wpf.CustomControls"
                    xmlns:conv="clr-namespace:VoiceCyber.Wpf.CustomControls.Core.Converters">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
    <conv:ImageSourceConverter x:Key="ImageSourceConverter"></conv:ImageSourceConverter>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="19" Height="13" Background="Transparent">
                        <Border Width="9"
                                  Height="9"
                                  BorderThickness="1"
                                  BorderBrush="#FF7898B5"
                                  CornerRadius="1"
                                  SnapsToDevicePixels="true">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="White" Offset=".2"/>
                                        <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath"
                                  Margin="1,1,1,1"
                                  Fill="Black"
                                  Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                                        L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data"
                                    TargetName="ExpandPath"
                                    Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GridTreeItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GridTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{Binding Columns,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:GridTree}}}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource 
                                      {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    </Style>

    <Style TargetType="{x:Type local:GridTree}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GridTree}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Focusable="False"
                                      CanContentScroll="False">
                            <DockPanel>
                                <GridViewHeaderRowPresenter Columns="{Binding Columns,RelativeSource={RelativeSource TemplatedParent}}" 
                                                        DockPanel.Dock="Top"/>
                                <ItemsPresenter/>
                            </DockPanel>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CheckableTreeItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{StaticResource ExpandCollapseToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type local:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <CheckBox IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                <Image x:Name="Icon" Stretch="Uniform" Height="15" Margin="2" Visibility="{Binding IsShowIcon, 
                                        Converter={StaticResource BooleanToVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType=local:CheckableTree}}" 
                                        Source="{Binding Icon,Converter={StaticResource ImageSourceConverter}}"></Image>
                                <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource 
                                      {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    </Style>

    <Style TargetType="{x:Type local:DiagramTree}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DiagramTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <local:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Hidden"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </local:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DiagramTreeItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DiagramTreeItem}">
                    <Border Name="BorderPanel">
                        <Grid Margin="15">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <local:DiagramPanel Grid.Row="1" Orientation="Horizontal"
                                              IsItemsHost="True" x:Name="ItemsHost">
                            </local:DiagramPanel>
                            <Border Name="BorderHeader" Grid.Row="0" HorizontalAlignment="Center">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" 
                                           FontWeight="Bold" Text="{Binding Name}"></TextBlock>
                                    <ToggleButton Grid.Column="0" Grid.Row="1" 
                                              Name="Expander"
                                              Style="{StaticResource ExpandCollapseToggleStyle}"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"></ToggleButton>
                                    <Image Grid.Column="1" Grid.Row="1" 
                                       Width="64" Height="64" Stretch="Uniform"
                                       Source="{Binding Icon}">
                                    </Image>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderHeader" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect></DropShadowBitmapEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger SourceName="BorderHeader" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderHeader" Property="BitmapEffect">
                                <Setter.Value>
                                    <DropShadowBitmapEffect></DropShadowBitmapEffect>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>