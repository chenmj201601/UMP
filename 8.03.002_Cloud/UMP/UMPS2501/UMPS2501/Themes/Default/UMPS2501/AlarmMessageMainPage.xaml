<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:umpc="http://www.voicecyber.com/ump/controls"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>

    <Style x:Key="GridSpilitVertical" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Width" Value="3"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush9}"></Setter>
    </Style>

    <Style x:Key="GridSpilitHorizental" TargetType="{x:Type GridSplitter}">
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="3"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush9}"></Setter>
    </Style>

    <Style x:Key="PopupInfo" TargetType="{x:Type umpc:PopupPanel}">
        <Setter Property="Icon" Value="Images/ump.png"></Setter>
    </Style>

    <Style x:Key="BorderTitleStyle" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush10}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush9}"></Setter>
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
    </Style>
    
    <Style x:Key="HeadOptButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="ToolTip" Value="{Binding Display}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush8}" Visibility="Collapsed"></Border>
                            <StackPanel Orientation="Horizontal" Margin="2,0">
                                <StackPanel Name="Panel"  Orientation="Horizontal">
                                    <Image Width="18" Stretch="Uniform" 
                                           Margin="1" 
                                           Source="{Binding Icon}"
                                           VerticalAlignment="Center"></Image>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LbTitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="5,0"></Setter>
    </Style>

    <Style x:Key="TreeAlarmMessageStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                          CornerRadius="1"
                          BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer Focusable="False"
                                  CanContentScroll="False"
                                  Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TreeItemAlarmMessageStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3,2,2,2" />
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="ToolTip" Value="{Binding Description}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
        <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                              Style="{DynamicResource ExpandCollaspToggleStyle}"
                              ClickMode="Press"
                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Bd"
                                Grid.Row="0"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <vcc:ListItemPanel>
                                <ContentPresenter x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </vcc:ListItemPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <HierarchicalDataTemplate x:Key="TreeItemAlarmMessageTemplate" DataType="{x:Type TreeViewItem}" ItemsSource="{Binding Children}">
        <Grid>
            <vcc:DragDropPanel Tag="{Binding}" AllowDrop="False">
                <StackPanel Orientation="Horizontal">
                    <Image Width="18" Height="18" Stretch="Uniform"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Source="{Binding Icon}"></Image>
                    <TextBlock HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Margin="5,0"
                           Text="{Binding Name}"></TextBlock>
                    <Image Width="15" Height="15" Stretch="Uniform"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Source="Images/00004.png"
                       Visibility="{Binding IsMultiSelected,Converter={StaticResource BooleanToVisibilityConverter}}"></Image>
                </StackPanel>
            </vcc:DragDropPanel>
        </Grid>
    </HierarchicalDataTemplate>
    
    <Style x:Key="ListViewAlarmInfoListStyle" TargetType="{x:Type ListView}">
        <Setter Property="VerticalContentAlignment"
            Value="Center" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Style="{DynamicResource
                                {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListViewItemAlarmInfoListStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                              Padding="5"
                              SnapsToDevicePixels="true"
                              Background="Transparent">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush9}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush8}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CellOperationButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="18"></Setter>
        <Setter Property="Height" Value="18"></Setter>
        <Setter Property="Margin" Value="5,2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush7}" Visibility="Hidden"></Border>
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StateEnabledImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/00005.ico"></Setter>
    </Style>

    <Style x:Key="StateDisabledImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/00006.ico"></Setter>
    </Style>

    <Style x:Key="PanelOptBtn" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Margin" Value="10,2"></Setter>
        <Setter Property="Height" Value="20"></Setter>
    </Style>
    
    <Style x:Key="GridTreeReceiverList" TargetType="{x:Type vcc:GridTree}">
        <Setter Property="IsShowIcon" Value="True"></Setter>
        <Setter Property="IsShowCheckBox" Value="True"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:GridTree}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Name="ScrollViewer" Focusable="False"
                                      CanContentScroll="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                            <RowDefinition Height="*"></RowDefinition>
                                            <RowDefinition Height="Auto"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <ScrollViewer Grid.Column="0" Grid.Row="0" 
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <GridViewHeaderRowPresenter
                                                Columns="{Binding Columns,RelativeSource={
                                                    RelativeSource FindAncestor,AncestorType={x:Type vcc:GridTree}}}" />
                                        </ScrollViewer>
                                        <ScrollContentPresenter Grid.Column="0" Grid.Row="1"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"></ScrollContentPresenter>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=VerticalOffset,Mode=OneWay}"></ScrollBar>
                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2"
                                                   Orientation="Horizontal"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=HorizontalOffset,Mode=OneWay}"></ScrollBar>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GridTreeItemReceiverList" TargetType="{x:Type vcc:GridTreeItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"></Setter>
        <Setter Property="IsChecked" Value="{Binding IsChecked,Mode=TwoWay}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:GridTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter x:Name="PART_Header" 
                                      Content="{TemplateBinding Header}" 
                                      Columns="{Binding Columns,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type vcc:GridTree}}}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinWidth"
                                    Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                    Property="MinHeight"
                                    Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush8}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  SystemBrush1}"/>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush9}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource  SystemBrush1}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{DynamicResource SystemBrush8}"/>
                            <Setter TargetName="PART_Header" Property="Control.Foreground" Value="{DynamicResource SystemBrush1}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="IsSelected" Value="{Binding IsSingleSelected}"></Setter>
    </Style>
    
    <Style x:Key="ListBoxSendMethodStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="2,0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <StackPanel Margin="0" IsItemsHost="True" Orientation="Horizontal"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListBoxItemSendMethodStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                              Padding="2,0"
                              SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
   <DataTemplate x:Key="ListBoxSendMethodTemplate" DataType="{x:Type ListBoxItem}">
       <Border ToolTip="{Binding Display}">
           <Image Width="18" Stretch="Uniform" Source="{Binding Icon}"></Image>
       </Border>
   </DataTemplate>

</ResourceDictionary>