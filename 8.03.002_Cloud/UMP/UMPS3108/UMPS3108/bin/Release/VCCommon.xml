<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VCCommon</name>
    </assembly>
    <members>
        <member name="T:VoiceCyber.Common.Converter">
            <summary>
            转换类，实现数据类型、格式的转换 
            这是一个静态类
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Int2Binary(System.Int32)">
            <summary>
            将整型值转成二进制
            </summary>
            <param name="intValue"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Binary2Int(System.String)">
            <summary>
            将二进制转成整型值
            </summary>
            <param name="strBinary"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Struct2Bytes(System.Object)">
            <summary>
            将结构体转换成字节数组
            </summary>
            <param name="objStruct">结构体</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Bytes2Struct(System.Byte[],System.Type)">
            <summary>
            将字节数组转换成结构体
            </summary>
            <param name="data">字节数组</param>
            <param name="type">结构体类型</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Hex2String(System.String)">
            <summary>
            将16进制数据转换成字符串
            </summary>
            <param name="strSource">16进制数据，长度应该是2的倍数</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Hex2Byte(System.String)">
            <summary>
            将16进制数据转换成字节数组
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.String2Hex(System.String)">
            <summary>
            将字符串以16进制形式表示
            </summary>
            <param name="strSource">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Byte2Hex(System.Byte[])">
            <summary>
            字节数组以16进制形式表示
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Second2Time(System.Double)">
            <summary>
            以时间形式表示秒数
            </summary>
            <param name="totalSecond"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.MilliSecond2Time(System.Double)">
            <summary>
            毫秒转换成时间
            </summary>
            <param name="millisecond"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.Time2Second(System.String)">
            <summary>
            将时间转换成秒
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.NumberToDatetime(System.String)">
            <summary>
            日期转换，如将20140101000000转换成2014-01-01 00:00:00
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.String2ByteArray(System.String)">
            <summary>
            将指定的字符串转成字节数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.String2ByteArray(System.String,System.Int32)">
            <summary>
            将指定的字符串转成指定大小的字节数组，不足的补充空（\0）
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.String2ByteArray(System.String,System.Text.Encoding)">
            <summary>
            使用指定的编码将指定的字符串转成字节数组
            </summary>
            <param name="str"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.Converter.String2ByteArray(System.String,System.Int32,System.Text.Encoding)">
            <summary>
            使用指定的编码将指定的字符串转成指定大小的字节数组，不足的补充空（\0）
            </summary>
            <param name="str"></param>
            <param name="length"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:VoiceCyber.Common.DatabaseParam">
            <summary>
            数据库连接参数
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.DBType">
            <summary>
            数据库类型，参考Defines中的定义
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.DBTypeName">
            <summary>
            数据库类型的名称
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.DBServer">
            <summary>
            数据库服务器地址
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.DBPort">
            <summary>
            数据库服务器端口
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.DBName">
            <summary>
            数据库名称或服务名（Oracle）
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.LoginUser">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.LoginPassword">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DatabaseParam.PwdEncryptType">
            <summary>
            密码加密方式
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.DBAccessHelper">
            <summary>
            数据库访问帮助类
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetDataSet(System.String,System.String)">
            <summary>
            静态方法，获取数据集
            </summary>
            <param name="strConn">数据库连接字符串</param>
            <param name="strSql">Sql 命令</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.ExecuteCommand(System.String,System.String)">
            <summary>
            静态方法，执行Sql命令
            </summary>
            <param name="strConn">数据库连接字符串</param>
            <param name="strSql">Sql命令</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.ExecuteProcedure(System.String,System.String,System.Collections.Generic.List{VoiceCyber.Common.DBCommandParameter})">
            <summary>
            静态方法，执行存储过程
            </summary>
            <param name="strConn">数据库连接字符串</param>
            <param name="procedureName">存储过程名称</param>
            <param name="parameters">参数列表</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.CloseConnection(System.Data.IDbConnection)">
            <summary>
            关闭数据库连接
            </summary>
            <param name="objConn">要关闭的连接</param>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetConnectionString(VoiceCyber.Common.DatabaseParam)">
            <summary>
            获取数据库连接字符串
            </summary>
            <param name="dbParam">数据库连接参数</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetConnection(System.Int32,System.String)">
            <summary>
            获取Connection
            </summary>
            <param name="dbType"></param>
            <param name="strConn"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetDataAdapter(System.Int32,System.Data.IDbConnection,System.String)">
            <summary>
            获取DataAdapter
            </summary>
            <param name="dbType"></param>
            <param name="objConn"></param>
            <param name="strSql"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetDBType(System.String)">
            <summary>
            通过分析数据库连接字符串，猜测数据库类型
            </summary>
            <param name="strConn"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.#ctor">
            <summary>
            创建一个DBAccessHelper实例
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.#ctor(VoiceCyber.Common.DatabaseParam)">
            <summary>
            使用指定的数据库连接参数创建一个DBAccessHelper实例
            </summary>
            <param name="dbParam"></param>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.GetDataSet(System.String)">
            <summary>
            获取数据集
            </summary>
            <param name="strSql">Sql命令</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.ExecuteCommand(System.String)">
            <summary>
            执行Sql命令
            </summary>
            <param name="strSql">Sql命令</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.ExecuteProcedure(System.String,System.Collections.Generic.List{VoiceCyber.Common.DBCommandParameter})">
            <summary>
            执行存储过程
            </summary>
            <param name="procedureName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DBAccessHelper.CloseConnection">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBAccessHelper.DBParam">
            <summary>
            获取或设置数据库连接参数
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBAccessHelper.DbConnection">
            <summary>
            获取或设置DBConnection
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.DBCommandParameter">
            <summary>
            Sql命令参数
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.DBType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.ParamName">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.ParamType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.ParamLength">
            <summary>
            参数数据长度
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.ParamValue">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DBCommandParameter.Direction">
            <summary>
            参数的输入输出方向
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.DBCommandParamType">
            <summary>
            Sql命令参数类型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.DBCommandParamType.Int">
            <summary>
            整形
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.DBCommandParamType.Number">
            <summary>
            数值型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.DBCommandParamType.VarChar">
            <summary>
            字符型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.DBCommandParamType.NVarChar">
            <summary>
            字符型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.DBCommandParamType.DateTime">
            <summary>
            日期时间型
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.Defines">
            <summary>
            用于定义VoiceCyber产品名称等信息
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.DownloadHelper">
            <summary>
            文件下载帮助类，支持http和ftp下载 
            这是一个静态类
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.DownloadHelper.DownloadFileFTP(System.String[])">
            <summary>
            FTP方式下载文件
            </summary>
            <param name="parameters">
            下载参数
            0：服务器地址
            1：端口
            2：登录名(如果为空，则匿名下载）
            3：登录密码
            4：源文件路径
            5：存放路径
            6: 如果目标文件已经存在，是否替换文件（可选）
            </param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DownloadHelper.DownloadFileHTTP(System.String[])">
            <summary>
            HTTP方式下载文件
            </summary>
            <param name="parameters">
            下载参数
            0：服务器地址
            1：端口
            2：登录名(如果为空，则匿名下载）
            3：登录密码
            4：源文件路径
            5：存放路径
            6: 如果目标文件已经存在，是否替换文件（可选）
            </param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.DownloadHelper.DownloadFile(VoiceCyber.Common.DownloadConfig)">
            <summary>
            从远程服务器下载文件
            </summary>
            <param name="config">下载参数</param>
            <returns></returns>
        </member>
        <member name="T:VoiceCyber.Common.DownloadConfig">
            <summary>
            下载参数
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.DownloadConfig.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.Method">
            <summary>
            下载方式
            1       http
            2       https
            11      ftp
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.Host">
            <summary>
            服务器地址
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.IsAnonymous">
            <summary>
            是否匿名下载，默认为True
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.LoginName">
            <summary>
            登录名（IsAnonymouse为False才有效）
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.Password">
            <summary>
            登录密码（IsAnonymouse为False才有效）
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.RequestPath">
            <summary>
            请求的路径
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.SavePath">
            <summary>
            存放的路径
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.DownloadConfig.IsReplace">
            <summary>
            如果文件存在，是否替换，默认True
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.SetPropertiesDelegate">
            <summary>
            用于构建属性值的回调
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:VoiceCyber.Common.JsonPropertyType">
            <summary>
            JsonObject属性值类型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.Object">
            <summary>
            Object
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.Array">
            <summary>
            Array
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.Bool">
            <summary>
            Bool
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.JsonPropertyType.Null">
            <summary>
            Null
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.JsonObject">
            <summary>
            JSON通用对象
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.#ctor">
            <summary>
            创建一个JSON对象
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.#ctor(System.String)">
            <summary>
            通过字符串构造一个JSON对象
            </summary>
            <param name="jsonString"></param>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.#ctor(VoiceCyber.Common.SetPropertiesDelegate)">
            <summary>
            通过回调函数构造一个JSON对象
            </summary>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.Parse(System.String@)">
            <summary>
            Json字符串解析
            </summary>
            <param name="jsonString">Json字符串</param>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.Properties``1(System.String)">
            <summary>
            通过此泛型函数可直接获取指定类型属性的值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.GetPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.RemoveProperty(System.String)">
            <summary>
            移除一个属性
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.IsNull">
            <summary>
            是否为空对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.ToString">
            <summary>
            转换成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.ToString(System.String)">
            <summary>
            指定格式表达式，转换成字符串
            </summary>
            <param name="format">格式化字符串</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonObject.ToString(System.String,System.Int32)">
            <summary>
            指定格式表达式及深度，转换成字符串
            </summary>
            <param name="format">格式表达式</param>
            <param name="level">深度</param>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.JsonObject.Item(System.String)">
            <summary>
            获取指定名称的属性
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:VoiceCyber.Common.JsonProperty">
            <summary>
            JSON对象属性
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.#ctor">
            <summary>
            创建一个空的JSON对象属性
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.#ctor(System.Object)">
            <summary>
            创建一个JSON对象属性
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.#ctor(System.String)">
            <summary>
            通过字符串构造一个JSON对象属性
            </summary>
            <param name="jsonString">Json字符串</param>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.Parse(System.String@)">
            <summary>
            Json字符串解析
            </summary>
            <param name="jsonString">Json字符串</param>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ParseArray(System.String@)">
            <summary>
            Json Array解析
            </summary>
            <param name="jsonString">Json字符串</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ParseString(System.String@)">
            <summary>
            Json String解析
            </summary>
            <param name="jsonString">Json字符串</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ParseObject(System.String@)">
            <summary>
            Json Object解析
            </summary>
            <param name="jsonString">Json字符串</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.Add(System.Object)">
            <summary>
            对于集合类型，添加一个元素
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.Clear">
            <summary>
            清空属性值，重置为默认值
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.GetValue">
            <summary>
            获取属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.GetValue``1">
            <summary>
            获取指定类型的属性值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.SetValue(System.Object)">
            <summary>
            设置属性的值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ToString">
            <summary>
            转换成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ToString(System.String)">
            <summary>
            指定格式表达式转换成字符串
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.JsonProperty.ToString(System.String,System.Int32)">
            <summary>
            指定格式表达式及深度转换成字符串
            </summary>
            <param name="format">格式表达式</param>
            <param name="level">深度</param>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Item(System.Int32)">
            <summary>
            定义一个索引器，如果属性是非数组的，返回本身
            </summary>
            <param name="index">索引位置</param>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Item(System.String)">
            <summary>
            提供一个字符串索引，简化对Object属性的访问
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Object">
            <summary>
            JsonObject值
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Value">
            <summary>
            字符串值
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Items">
            <summary>
            Array值，如果属性是非数组的，则封装成只有一个元素的数组
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Number">
            <summary>
            数值
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Count">
            <summary>
            对于集合类型，返回元素的数目
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.JsonProperty.Type">
            <summary>
            返回属性值类型
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.ListSorter">
            <summary>
            对集合进行排序，如
            List<!--<User> users=new List<User>(){.......}-->
            <!--ListSorter.SortList<list<User>,User>(ref users,"Name",SortDirection.Ascending);-->
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.ListSorter.SortList``2(``0@,System.String,VoiceCyber.Common.SortDirection)">
            <summary>
            对集合进行排序
            </summary>
            <param name="list"></param>
            <param name="property"></param>
            <param name="direction"></param>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:VoiceCyber.Common.ListSorter.QuickSort``2(``0@,System.Int32,System.Int32,System.Reflection.PropertyInfo,VoiceCyber.Common.SortDirection)">
            <summary>
            快速排序算法
            </summary>
            <typeparam name="TCollection"><!--集合类型，需要实现Ilist<T>集合--></typeparam>
            <typeparam name="TItem">集合中对象的类型</typeparam>
            <param name="list">集合对象</param>
            <param name="left">起始位置，从0开始</param>
            <param name="right">终止位置</param>
            <param name="propertyinfo">集合中对象的属性，属性必须要实现IComparable接口</param>
            <param name="direction">排序类型（升序或降序）</param>
        </member>
        <member name="T:VoiceCyber.Common.SortDirection">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.SortDirection.Ascending">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.SortDirection.Descending">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.LogMode">
            <summary>
            日志级别,可任意组合
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.Fatal">
            <summary>
            致命
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.All">
            <summary>
            所有消息
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.LogMode.General">
            <summary>
            一般（默认）
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.LogOperator">
            <summary>
            日志操作类，写日志，备份以及回删日志
            1、使用属性进行相关配置
            2、调用Start启动日志写入器
            3、调用Stop停止日志写入器
            4、可以任意设置LogMode参数来记录指定类型的日志
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.#ctor">
            <summary>
            创建一个日志操作类型
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.Start">
            <summary>
            启动日志写入器
            </summary>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.Stop">
            <summary>
            停止日志写入器
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.WriteLog(VoiceCyber.Common.LogMode,System.String,System.String)">
            <summary>
            写入日志
            </summary>
            <param name="mode">日志模式</param>
            <param name="category">分类</param>
            <param name="msg">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.LogDebug(System.String,System.String)">
            <summary>
            写入调试日志
            </summary>
            <param name="category">分类</param>
            <param name="msg">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.LogInfo(System.String,System.String)">
            <summary>
            写入信息日志
            </summary>
            <param name="category">分类</param>
            <param name="msg">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.LogError(System.String,System.String)">
            <summary>
            写入错误日志
            </summary>
            <param name="category">分类</param>
            <param name="msg">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.LogOperator.GetLogFileName">
            <summary>
            获取当前日志文件的完整路径
            </summary>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.LogOperator.LogFileSize">
            <summary>
            设置日志文件的大小，超过此值将备份日志文件
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.LogOperator.LogSaveDays">
            <summary>
            设置日志文件保留天数
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.LogOperator.LogFileName">
            <summary>
            设置日志文件的前缀名
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.LogOperator.LogPath">
            <summary>
            设置日志文件的保存路径，可以是绝对路径，也可以是相对路径
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.LogOperator.LogMode">
            <summary>
            日志记录模式，可以是任意模式或各模式的组合
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.OperationReturn">
            <summary>
            操作返回值
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.OperationReturn.ToString">
            <summary>
            以字符串形式返回
            </summary>
            <returns></returns>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.Code">
            <summary>
            返回代码，参考Defines中的定义
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.IntValue">
            <summary>
            返回值，整型
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.NumericValue">
            <summary>
            返回值，数值型
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.StringValue">
            <summary>
            返回值，文本型
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.Data">
            <summary>
            返回值，使用的时候可通过 as 转换成对应的对象
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.OperationReturn.Exception">
            <summary>
            操作异常
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.RegistryHelper">
            <summary>
            操作注册表的帮助类
            这是一个静态类型
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.RegistryHelper.GetItemData(VoiceCyber.Common.RegistryType,System.String,System.String)">
            <summary>
            获取指定注册表路径下指定项的值
            </summary>
            <param name="type">注册表类型</param>
            <param name="registryPath">注册表路径</param>
            <param name="itemName">项名称</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.RegistryHelper.WriteItemData(VoiceCyber.Common.RegistryType,System.String,System.String,System.Object)">
            <summary>
            写入注册表值
            </summary>
            <param name="type">注册表类型</param>
            <param name="registryPath">注册表路径</param>
            <param name="itemName">项名称</param>
            <param name="data">注册表值</param>
            <returns></returns>
        </member>
        <member name="T:VoiceCyber.Common.RegistryType">
            <summary>
            注册表类型
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.RegistryType.LocalMerchine">
            <summary>
            本地计算机
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.RegistryType.CurrentUser">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.WaitHelper">
            <summary>
            一个处理等待对象的帮助类
            这是一个静态类
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.WaitHelper.ListWaitObject">
            <summary>
            暂存等待对象的集合
            </summary>
        </member>
        <member name="F:VoiceCyber.Common.WaitHelper.MaxTime">
            <summary>
            最长等待时间，秒
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.WaitHelper.InsertWaitObject(VoiceCyber.Common.WaitObject)">
            <summary>
            向集合中插入一个等待对象
            </summary>
            <param name="waitObject">等待对象</param>
        </member>
        <member name="M:VoiceCyber.Common.WaitHelper.DoWaitObject(VoiceCyber.Common.WaitObject)">
            <summary>
            执行等待操作，即阻塞当前线程，直到指定等待对象的IsFinished属性为true
            </summary>
            <param name="waitObject">等待对象</param>
        </member>
        <member name="M:VoiceCyber.Common.WaitHelper.DoWaitObject(VoiceCyber.Common.WaitObject,System.Int32)">
            <summary>
            执行等待操作，即阻塞当前线程，直到指定等待对象的IsFinished属性为true，可以指定最长等待时间
            </summary>
            <param name="waitObject">等待对象</param>
            <param name="maxTime">最长等待时间</param>
        </member>
        <member name="T:VoiceCyber.Common.WaitObject">
            <summary>
            等待对象，用于异步操作中传递相关变量
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.WaitObject.Result">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.WaitObject.IsFinished">
            <summary>
            是否完成，实例化的时候应该设为false，当异步操作完成设为true
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.WaitObject.Name">
            <summary>
            等待对象的名称，作为区分不同等待对象，同一程序中等待对象的名称不能重复
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.WaitObject.Message">
            <summary>
            消息信息
            </summary>
        </member>
        <member name="P:VoiceCyber.Common.WaitObject.OptReturn">
            <summary>
            操作返回值
            </summary>
        </member>
        <member name="T:VoiceCyber.Common.XMLHelper">
            <summary>
            XML文件操作帮助类
            </summary>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.SeriallizeObject``1(``0)">
            <summary>
            将对象序列化成字符串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.SerializeFile``1(``0,System.String)">
            <summary>
            将对象序列化成一个xml文件
            </summary>
            <typeparam name="T">要序列化的对象的类型</typeparam>
            <param name="obj">要序列化的对象</param>
            <param name="fileName">xml文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.DeserializeObject``1(System.String)">
            <summary>
            从字符串中反序列化出对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strContent"></param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.DeserializeFile``1(System.String)">
            <summary>
            从xml文件反序列化出对象
            </summary>
             <typeparam name="T">要反序列化的对象的类型</typeparam>
            <param name="fileName">xml文件的完整路径</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.GetElementValue(System.String,System.String)">
            <summary>
            获取指定元素的值
            </summary>
            <param name="fileName">xml文件的完整路径</param>
            <param name="path">元素的路径</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.GetElementPropertyValue(System.String,System.String,System.String)">
            <summary>
            获取指定元素指定属性的值
            </summary>
            <param name="fileName">xml文件的完整路径</param>
            <param name="path">元素路径</param>
            <param name="propertyName">属性名称</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.GetChildElements(System.String,System.String)">
            <summary>
            获取指定元素的所有子元素
            </summary>
            <param name="fileName">xml文件的完整路径</param>
            <param name="path">元素路径</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.SetElementValue(System.String,System.String,System.String)">
            <summary>
            设置指定元素的值
            </summary>
            <param name="fileName">xml文件的完整路径</param>
            <param name="path">元素路径</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:VoiceCyber.Common.XMLHelper.SetElementPropertyValue(System.String,System.String,System.String,System.String)">
            <summary>
            设置指定元素指定属性的值
            </summary>
            <param name="fileName">xml文件的完整路径</param>
            <param name="path">元素路径</param>
            <param name="propertyName">属性名称</param>
            <param name="value">属性值</param>
            <returns></returns>
        </member>
    </members>
</doc>
