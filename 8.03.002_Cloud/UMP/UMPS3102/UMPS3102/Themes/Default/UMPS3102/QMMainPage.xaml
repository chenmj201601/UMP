<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:umpc="http://www.voicecyber.com/ump/controls"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls">

    <Style x:Key="QMMainView" TargetType="{x:Type Page}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush11}"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
        <!--<Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].X"
                                             From="500" To="0" AccelerationRatio="1" Duration="0:0:0.8"></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            From="0" To="1" Duration="0:0:0.8"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="MainPageBg" TargetType="{x:Type Border}">

    </Style>

    <Style x:Key="PageHead" TargetType="{x:Type umpc:UMPPageHead}">
        <Setter Property="AppName" Value="UMP Query Management"></Setter>
        <Setter Property="Height" Value="80"></Setter>
    </Style>

    <Style x:Key="StatusBar" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush2}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
    </Style>

    <Style x:Key="MyWaiter" TargetType="{x:Type vcc:MetroWaiter}">
        <Setter Property="Width" Value="500"></Setter>
        <Setter Property="Height" Value="10"></Setter>
    </Style>
    
    <Style x:Key="BorderLeft" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderLeftBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush9}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>

    <Style x:Key="BorderMain" TargetType="{x:Type Border}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
    </Style>

    <Style x:Key="BorderMainBg" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="Opacity" Value="0.8"></Setter>
    </Style>

    <Style x:Key="GridSpliterLeft" TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
    </Style>

    <Style x:Key="BorderBasicOpt" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,2,0,1"></Setter>
    </Style>

    <Style x:Key="BorderOtherPosition" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,1"></Setter>
    </Style>

    <Style x:Key="BorderDetail" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,0,0,1"></Setter>
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
    </Style>

    <Style x:Key="OptUnEnableButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Over" Background="{DynamicResource SystemBrush9}" Visibility="Collapsed"></Border>
                            <StackPanel Orientation="Horizontal" Margin="10,5">
                                <StackPanel Name="Panel"  Orientation="Horizontal">
                                    <Image Width="18" Stretch="Uniform" 
                                           Margin="2,0,0,0" 
                                           Source="{Binding Icon}"
                                           VerticalAlignment="Center"></Image>
                                    <TextBlock Margin="2,0" VerticalAlignment="Center" Foreground="Gray"
                                            Text="{Binding Display}"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border">
                        <Grid>
                            <Border Name="Disable" Background="{DynamicResource SystemBrush2}" Visibility="Collapsed"></Border>
                            <Border Name="Over" Background="{DynamicResource SystemBrush9}" Visibility="Collapsed"></Border>
                            <StackPanel Orientation="Horizontal" Margin="10,5">
                                <StackPanel Name="Panel"  Orientation="Horizontal">
                                    <Image Width="18" Stretch="Uniform" 
                                           Margin="2,0,0,0" 
                                           Source="{Binding Icon}"
                                           VerticalAlignment="Center"></Image>
                                    <TextBlock Margin="2,0" VerticalAlignment="Center"
                                            Text="{Binding Display}"></TextBlock>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Disable" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton"
                   TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition ></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                      Grid.ColumnSpan="2"
                      CornerRadius="2"
                      BorderThickness="1"
                    Background="{DynamicResource SystemBrush8}"
                    BorderBrush="{DynamicResource SystemBrush8}">
            </Border>
            <Path x:Name="CollapsedArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <Path x:Name="ExpandededArrow" Grid.Column="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="M 0 4 L 4 0 L 8 4 Z"
                      Fill="{DynamicResource SystemBrush1}">
            </Path>
            <ContentPresenter Grid.Column="1" 
                              HorizontalAlignment="Left" 
                              VerticalAlignment="Center"></ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush7}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush10}"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SystemBrush8}"></Setter>
                <Setter TargetName="ExpandededArrow" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="CollapsedArrow" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpandStyle" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2,2,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <ToggleButton OverridesDefaultStyle="True" Grid.ColumnSpan="2"
                                          Template="{StaticResource ExpanderToggleButton}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter
                                          Margin="5"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="{DynamicResource SystemBrush1}"/>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Border x:Name="Content"
                                Visibility="Collapsed"
                                Grid.Row="1"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="Content" Property="Visibility"
                                    Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush8}"></Setter>
    </Style>

    <Style x:Key="PopupInfo" TargetType="{x:Type umpc:PopupPanel}">
        <Setter Property="Icon" Value="Images/ump.png"></Setter>
    </Style>

    <Style x:Key="ToolBarToggleBtnStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="ToolTip" Value="{Binding Tip}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bg">
                        <Grid>
                            <Border Background="{DynamicResource SystemBrush7}"></Border>
                            <Border Name="Checked" Background="{DynamicResource SystemBrush10}" Visibility="Collapsed"></Border>
                            <Image Source="{Binding Icon}" Width="20" Height="20" Stretch="Uniform"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Checked" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="Width" Value="24"></Setter>
        <Setter Property="Height" Value="24"></Setter>
        <Setter Property="ToolTip" Value="{Binding Tip}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bg">
                        <Grid>
                            <Border Name="Hover" Background="{DynamicResource SystemBrush7}" Visibility="Collapsed"></Border>
                            <Border Name="Pressed" Background="{DynamicResource SystemBrush10}" Visibility ="Collapsed"></Border>
                            <Image Source="{Binding Icon}" Width="20" Height="20" Stretch="Uniform"></Image>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Hover" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Pressed" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BorderComboQueryConditions" TargetType="{x:Type Border}">
        <Setter Property="MinWidth" Value="100"></Setter>
    </Style>
    
    <DataTemplate x:Key="QueryConditionDataTemplate" DataType="{x:Type ComboBoxItem}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </DataTemplate>
    
    <Style x:Key="BorderPanelContent" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
    </Style>
    
    <Style x:Key="TxtPageInfoStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="15,2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    
    <Style x:Key="TxtPageStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush1}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                              CornerRadius="1"
                              BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer Margin="0"
                          x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewRecord" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels"
            Value="true" />
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter Property="VerticalContentAlignment"
            Value="Center" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush3}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Style="{DynamicResource
                                {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListViewItemRecord" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{Binding Background}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                              Padding="3"
                              SnapsToDevicePixels="true"
                              Background="{TemplateBinding Background}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush9}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush8}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListViewItemDownload" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{Binding Foreground}"></Setter>
        <Setter Property="ToolTip" Value="{Binding Error}"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                              Padding="3"
                              SnapsToDevicePixels="true"
                              Background="{TemplateBinding Background}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" 
                                    Value="{DynamicResource SystemBrush8}"></Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TreeViewObjects" TargetType="{x:Type vcc:CheckableTree}">
        <Setter Property="IsShowIcon" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="5">
                            <ItemsPresenter></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <HierarchicalDataTemplate x:Key="ObjectItemTemplate" DataType="{x:Type vcc:CheckableTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>
    
    <Style x:Key="TreeViewItemObject" TargetType="{x:Type vcc:CheckableTreeItem}">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="IsChecked" Value="{Binding IsChecked}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"></Setter>
        <Setter Property="ToolTip" Value="{Binding Description}"></Setter>
        <Setter Property="Icon" Value="{Binding Icon}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{DynamicResource ExpandCollaspToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type vcc:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <CheckBox IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                <Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding Icon,Mode=OneTime,IsAsync=True}"></Image>
                                <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListBoxCallInfo" TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Margin" Value="2,5,2,2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border"
                            CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListBoxItemCallInfo" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <DataTemplate x:Key="CallInfoTemplate" DataType="{x:Type ListBoxItem}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Name}" Margin="2,1,10,1" 
                       Foreground="{DynamicResource SystemBrush7}" FontWeight="Bold"></TextBlock>
            <TextBox Text="{Binding Value}" BorderThickness="0" Background="Transparent" IsReadOnly="True"></TextBox>
        </StackPanel>
    </DataTemplate>
    
    <Style x:Key="LbSerialIDStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="13"></Setter>
        <Setter Property="Margin" Value="5,5,2,5"></Setter>
    </Style>
    
    <Style x:Key="LbStartRecrodTimeStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
        <Setter Property="Margin" Value="5,0,2,5"></Setter>
    </Style>

    <Style x:Key="BtnStopQuery" TargetType="{x:Type Button}">
        <Setter Property="Width"  Value="20"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border">
                        <Grid>
                            <Border Name="Over" CornerRadius="2" BorderThickness="1" Background="{DynamicResource SystemBrush7}" Visibility="Collapsed"></Border>
                            <Ellipse Name="Ellipse" Margin="2" Stroke="{DynamicResource SystemBrush7}" Fill="{DynamicResource SystemBrush7}"></Ellipse>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Over" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Margin" Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageMediaTypeVoice" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/media1.png"></Setter>
    </Style>

    <Style x:Key="ImageMediaTypeScreen" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/media2.png"></Setter>
    </Style>

    <Style x:Key="ImageMediaTypeVoiceScreen" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="32"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/media0.png"></Setter>
    </Style>

    <Style x:Key="ImageEncryptFlag2" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"></Setter>
        <Setter Property="Height" Value="16"></Setter>
        <Setter Property="Stretch" Value="Uniform"></Setter>
        <Setter Property="Source" Value="Images/lock.png"></Setter>
    </Style>

</ResourceDictionary>