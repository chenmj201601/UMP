<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vcc="http://www.voicecyber.com/Wpf/Controls">

    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Common.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>-->

    <Style x:Key="FormStyle" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10,15,10,5"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="FormButtonSeperator" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="2"></Setter>
        <Setter Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="Margin" Value="10 5"></Setter>
    </Style>

    <Style x:Key="FormButtonStyle" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="10,5,10,15"></Setter>
    </Style>

    <Style x:Key="FormItemTitle" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="FormItemTitleDesc" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Top"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
    </Style>

    <Style x:Key="FormItemValue" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="160"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="5,0"></Setter>
    </Style>

    <Style x:Key="FormItemValueDouble" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="330"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
    </Style>

    <Style x:Key="FormItemValueDesc" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="180"></Setter>
        <Setter Property="Height" Value="80"></Setter>
        <Setter Property="Margin" Value="5,0"></Setter>
    </Style>
    
    <Style x:Key="ControlStyle1" TargetType="{x:Type Control}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
    </Style>

    <Style x:Key="ControlStyle2" TargetType="{x:Type Control}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Width" Value="50"></Setter>
        <Setter Property="Height" Value="25"></Setter>
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
    </Style>

    <Style x:Key="ToggleMore" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Padding" Value="2,2,5,2"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Border" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Name="Collasped" Grid.Column="0">
                                <TextBlock Text=">>"></TextBlock>
                            </Border>
                            <Border Name="Expanded" Grid.Column="0">
                                <TextBlock Text="&lt;&lt;"></TextBlock>
                            </Border>
                            <ContentPresenter Grid.Column="1"></ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Expanded" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="Collasped" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Expanded" Property="Visibility" Value="Collapsed"></Setter>
                            <Setter TargetName="Collasped" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SystemBrush10}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabControlCondition" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBrush7}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Row="0"
                                  Panel.ZIndex="1"
                                  Margin="0,0,4,-1"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Background="Transparent" />
                        <Border x:Name="Border"
                                    Grid.Row="1"
                                    BorderThickness="1"
                                    CornerRadius="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                Margin="4"
                                ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConditionTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding TabName}"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0"
                                BorderThickness="0"
                                CornerRadius="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="10,5"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource SystemBrush2}"></Setter>
                            <Setter TargetName="Border" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush3}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TreeViewObjects" TargetType="{x:Type vcc:CheckableTree}">
        <Setter Property="IsShowIcon" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTree}">
                    <Border Name="BorderPanel"
                            CornerRadius="1"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}">
                        <vcc:FrictionScrollViewer HorizontalScrollBarVisibility="Hidden"
                                                    VerticalScrollBarVisibility="Auto"
                                                    Padding="5">
                            <ItemsPresenter></ItemsPresenter>
                        </vcc:FrictionScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="ObjectItemTemplate" DataType="{x:Type vcc:CheckableTreeItem}"
                              ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding Name}"></TextBlock>
    </HierarchicalDataTemplate>

    <Style x:Key="TreeViewItemObject" TargetType="{x:Type vcc:CheckableTreeItem}">
        <Setter Property="Padding" Value="2,3" />
        <Setter Property="Margin" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="IsChecked" Value="{Binding IsChecked}"></Setter>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"></Setter>
        <Setter Property="ToolTip" Value="{Binding Description}"></Setter>
        <Setter Property="Icon" Value="{Binding Icon}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vcc:CheckableTreeItem}">
                    <StackPanel>
                        <Border Name="Bd"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <StackPanel Name="PART_Header" Orientation="Horizontal">
                                <ToggleButton x:Name="Expander" 
                                          Style="{DynamicResource ExpandCollaspToggleStyle}" 
                                          IsChecked="{Binding Path=IsExpanded,
                                                     RelativeSource={RelativeSource AncestorType={x:Type vcc:CheckableTreeItem}}}"
                                          ClickMode="Press"/>
                                <CheckBox IsChecked="{Binding IsChecked}" Tag="{Binding }"   VerticalAlignment="Center" />
                                <Image Width="16" Height="16" VerticalAlignment="Center" Source="{Binding Icon,Mode=OneTime,IsAsync=True}"></Image>
                                <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Margin="15,0,0,0" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander"
                                  Property="Visibility"
                                  Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinWidth"
                                  Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header"
                                  Property="MinHeight"
                                  Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background"
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" 
                                    Value="{DynamicResource SystemBrush7}"></Setter>
                            <Setter TargetName="PART_Header" Property="Control.Foreground"
                                    Value="{DynamicResource SystemBrush1}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>